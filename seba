#include <iostream>
#include <vector>
#include <cstdlib> // Para generar números aleatorios
#include <ctime>   // Para inicializar la semilla del generador de números aleatorios

std::vector<int> sumarParesImpares(const std::vector<int>& numeros)
{
    std::vector<int> resultado(2, 0); // Inicializar el vector resultado con dos elementos, ambos en 0

    for (int numero : numeros) {
        if (numero % 2 == 0) {
            resultado[0] += numero; // Sumar al primer elemento si el número es par
        }
        else {
            resultado[1] += numero; // Sumar al segundo elemento si el número es impar
        }
    }

    return resultado;
}

int main()
{
    std::srand(std::time(0)); // Inicializar la semilla del generador de números aleatorios

    std::vector<int> vectorA;
    const int tamanoVector = 6; // Tamaño del vector

    // Generar números aleatorios menores a 30 y agregarlos al vectorA
    for (int i = 0; i < tamanoVector; i++) {
        int numeroAleatorio = std::rand() % 30;
        vectorA.push_back(numeroAleatorio);
    }

    // Mostrar el vectorA generado
    std::cout << "vectorA: [";
    for (int i = 0; i < tamanoVector; i++) {
        std::cout << vectorA[i];
        if (i != tamanoVector - 1) {
            std::cout << ", ";
        }
    }
    std::cout << "]" << std::endl;

    // Calcular la suma de pares e impares utilizando la función sumarParesImpares
    std::vector<int> vectorResultado = sumarParesImpares(vectorA);

    // Mostrar el vectorResultado
    std::cout << "vectorResultado: [" << vectorResultado[0] << ", " << vectorResultado[1] << "]" << std::endl;

    return 0;
